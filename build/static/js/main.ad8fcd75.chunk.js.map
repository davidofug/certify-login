{"version":3,"sources":["reportWebVitals.js","firebase.js","contexts/AuthContext.js","ui-utilites/Alert.js","components/Signup.js","components/Signin.js","components/Resetpassword.js","components/Updateprofile.js","components/Certify.js","components/Notfound.js","components/Privateroute.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AutheContext","React","provider","GoogleAuthProvider","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","auth","getAuth","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","signout","signOut","resetPassword","sendPasswordResetEmail","updateMyEmail","updateEmail","updateMyPassword","updatePassword","signInWithGoogle","signInWithPopup","Provider","Alert","variant","className","Signup","error","setError","passwordRef","confirmPasswordRef","emailRef","history","useHistory","handleGoogleSignUp","a","push","handleSubmit","event","preventDefault","current","password2","document","getElementById","reset","onSubmit","action","method","id","htmlFor","type","placeholder","ref","required","disabled","onClick","to","Signin","handleGoogleSignIn","Forgotpassword","message","setMessage","UpdateProfile","promises","Promise","all","catch","console","finally","defaultValue","Certify","href","NotFound","PrivateRoute","rest","render","location","pathname","state","from","AppRouter","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ad8fcd75.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {initializeApp} from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport default app;","import * as React from 'react'\nimport app from '../firebase'\n\nimport {\n    getAuth,\n    createUserWithEmailAndPassword,\n    onAuthStateChanged,\n    signInWithEmailAndPassword,\n    signOut,\n    sendPasswordResetEmail,\n    updateEmail,\n    updatePassword,\n    GoogleAuthProvider,\n    signInWithPopup\n} from 'firebase/auth';\n\nconst AutheContext = React.createContext();\nconst provider = new GoogleAuthProvider();\n\nexport function useAuth() {\n    return React.useContext(AutheContext )\n}\n\nexport default function AuthProvider ({children}) {\n\n    const [currentUser, setCurrentUser] = React.useState()\n    const [loading, setLoading] = React.useState(true)\n\n    const auth = getAuth()\n\n    function signup(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password)\n    }\n\n    function signin(email, password) {\n        return signInWithEmailAndPassword(auth, email, password)\n    }\n\n    function signInWithGoogle() {\n       return signInWithPopup(auth, provider)\n    }\n\n    function signout(){\n        return signOut(auth)\n    }\n\n    function resetPassword(email) {\n        return sendPasswordResetEmail(auth,email)\n    }\n\n    function updateMyEmail(email) {\n        return updateEmail(currentUser,email)\n    }\n\n    function updateMyPassword(password) {\n        return updatePassword(currentUser, password)\n    }\n\n    React.useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, user => {\n            setLoading(false)\n            setCurrentUser(user)\n        })\n\n        return unsubscribe\n    },[])\n\n    onAuthStateChanged(auth, user => {\n        setCurrentUser(user)\n    })\n\n    const value = { \n        currentUser,\n        signup,\n        signin,\n        signout,\n        resetPassword,\n        updateMyEmail,\n        updateMyPassword,\n        signInWithGoogle\n    }\n\n    return (\n        <AutheContext.Provider value={value}>\n            {!loading && children}\n        </AutheContext.Provider>\n    )\n}  \n","import React from \"react\"\nimport \"./utilities.css\"\n\nexport default function Alert({children, variant}) {\n    if(variant === 'danger')\n        return (\n            <div className=\"alert danger\">\n                {children}\n            </div>\n        )\n    if(variant === 'success')\n        return (\n            <div className=\"alert success\">\n                {children}\n            </div>\n        )\n\n    return <>Rendered Alert without settings</>\n    \n}\n","import * as React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../App.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport Alert from '../ui-utilites/Alert';\n\nexport default function Signup() {\n\n    const [error,setError] = React.useState('')\n    const [loading, setLoading] = React.useState(false)\n\n    const passwordRef = React.useRef()  \n    const confirmPasswordRef = React.useRef()\n    const emailRef = React.useRef()\n\n    const { signup, currentUser, signInWithGoogle} = useAuth()\n    const history = useHistory()\n\n    const handleGoogleSignUp = async () => {\n      try {\n        const result = await signInWithGoogle()\n        history.push('/certify')\n\n      } \n      catch\n      {\n        setError( 'Failed to login' )\n      }\n    }\n\n    const handleSubmit = async event => {\n      event.preventDefault()\n\n      const password = passwordRef.current.value\n      const password2 = confirmPasswordRef.current.value\n      const email = emailRef.current.value\n\n      if( !email ) {\n        return setError( 'Valid email required' )\n      }\n\n      if( password !== password2 ) {\n        return setError( 'Passwords do not match' )\n      }\n\n      try {\n        setError('')\n        setLoading( true )\n        await signup(email, password)\n        document.getElementById('signup').reset()\n        history.push('/certify')\n      }\n      catch\n      {\n        setError( 'Failed to create an account' )\n      }\n\n      setLoading( false )\n\n    }\n  \n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n            <h1>Sign Up</h1>\n\n            {currentUser && currentUser.email}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n\n            <form\n              onSubmit={handleSubmit}\n              action=\"/\"\n              method=\"post\"\n              id=\"signup\"\n            >\n              <div className=\"field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    ref={emailRef}\n                    required\n                  />\n              </div>\n              <div className=\"field\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    ref={passwordRef}\n                    required\n                  />\n              </div>\n              <div className=\"field\">\n                  <label htmlFor=\"password2\">Confirm Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password2\"\n                    placeholder=\"Confirm Password\"\n                    ref={confirmPasswordRef}\n                    required\n                  />\n              </div>\n              <div className=\"button\">\n                  <button disabled={loading} type=\"submit\">Sign Up</button>\n              </div>\n            </form>\n            <button onClick={handleGoogleSignUp}>Sign Up with Google</button>\n        </div>\n        <p>Have an account? <Link to=\"/\">Log In</Link></p>\n      </div>\n    )\n};","import * as React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport Alert from '../ui-utilites/Alert';\nimport '../App.css';\n\nexport default function Signin() {\n\n    const [error,setError] = React.useState('')\n    const [loading, setLoading] = React.useState(false)\n\n    const passwordRef = React.useRef()  \n    const emailRef = React.useRef()\n\n    const { signin, signInWithGoogle} = useAuth()\n    const history = useHistory()\n\n    const handleSubmit = async event => {\n      event.preventDefault()\n      \n      const email = emailRef.current.value\n      const password = passwordRef.current.value\n\n      if( !email ) {\n        return setError( 'Valid email required' )\n      }\n\n      try {\n        setError('')\n        setLoading( true )\n        await signin(email, password)\n        document.getElementById('signin').reset()\n        history.push(\"/certify\")\n      }\n      catch\n      {\n        setError( 'Failed to login' )\n      }\n\n      setLoading( false )\n\n    }\n  \n    const handleGoogleSignIn = async () => {\n      try {\n        const result = await signInWithGoogle()\n        history.push('/certify')\n\n      } \n      catch\n      {\n        setError( 'Failed to login' )\n      }\n/* \n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        setCurrentUser(user)\n\n      }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      }); */\n\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n            <h1>Sign In</h1>\n\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n\n            <form\n              onSubmit={handleSubmit}\n              action=\"/\"\n              method=\"post\"\n              id=\"signin\"\n            >\n              <div className=\"field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    ref={emailRef}\n                    required\n                  />\n              </div>\n              <div className=\"field\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    ref={passwordRef}\n                    required\n                  />\n              </div>\n              <div className=\"button\">\n                  <button disabled={loading} type=\"submit\">Sign In</button>\n                  <Link to=\"/forgot-password\">Forgot Password?</Link>\n\n              </div>\n            </form>\n\n            <div>\n              <button onClick={handleGoogleSignIn}>Google</button>\n            </div>\n        </div>\n        <p>Need an account? <Link to=\"/sign-up\" >Sign Up</Link></p>\n      </div>\n    )\n};","\nimport * as React from 'react';\nimport { Link} from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport Alert from '../ui-utilites/Alert';\nimport '../App.css';\n\nexport default function Forgotpassword() {\n\n    const [error,setError] = React.useState('')\n    const [loading, setLoading] = React.useState(false)\n    const [message, setMessage] = React.useState('')\n    const emailRef = React.useRef()\n\n    const { resetPassword } = useAuth()\n\n    const handleSubmit = async event => {\n      event.preventDefault()\n      \n      const email = emailRef.current.value\n\n      if( !email ) {\n        return setError( 'Valid email required' )\n      }\n\n      try {\n        setError('')\n        setLoading( true )\n        await resetPassword(email)\n        setMessage('Check your inbox for password reset instructions.')\n        document.getElementById('resetpassword').reset()\n      }\n      catch\n      {\n        setError( 'Failed to reset password' )\n      }\n\n      setLoading( false )\n\n    }\n  \n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n            <h1>Reset Password</h1>\n\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            <form\n              onSubmit={handleSubmit}\n              action=\"/\"\n              method=\"post\"\n              id=\"resetpassword\"\n            >\n              <div className=\"field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    ref={emailRef}\n                    required\n                  />\n              </div>\n              <div className=\"button\">\n                  <button disabled={loading} type=\"submit\">Reset Password</button>\n                  Remember Password? <Link to=\"/sign-in\">Sign In</Link>\n\n              </div>\n            </form>\n        </div>\n        <p>Need an account? <Link to=\"/sign-up\" >Sign Up</Link></p>\n      </div>\n    )\n};","import * as React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../App.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport Alert from '../ui-utilites/Alert';\n\nexport default function UpdateProfile() {\n\n    const [error,setError] = React.useState('')\n    const [loading, setLoading] = React.useState(false)\n    const [message, setMessage] = React.useState('')\n\n    const passwordRef = React.useRef()  \n    const confirmPasswordRef = React.useRef()\n    const emailRef = React.useRef()\n\n    const { currentUser, updateMyEmail, updateMyPassword} = useAuth()\n\n    const history = useHistory()\n\n    const handleSubmit = async event => {\n      event.preventDefault()\n\n      const password = passwordRef.current.value\n      const password2 = confirmPasswordRef.current.value\n      const email = emailRef.current.value\n\n      if( !email ) {\n        return setError( 'Valid email required' )\n      }\n\n      if( password !== password2 ) {\n        return setError( 'Passwords do not match' )\n      }\n\n      const promises = []\n\n      setLoading(true)\n\n      if(email !== currentUser.email) {\n        promises.push(updateMyEmail(email))\n      }\n\n      if(password) {\n        promises.push(updateMyPassword(password))\n      }\n\n      Promise.all(promises).then(() => {\n        setMessage('Profile updated')\n\n      }).catch((error) => {\n        console.error(error)\n        setError('Failed to update account')\n\n      }).finally(()=>{\n        setLoading(false)\n      })\n\n    }\n  \n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n\n            <h1> Update profile</h1>\n            <p><Link to=\"/certify\">Certify</Link></p>\n\n            {currentUser && currentUser.email}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            <form\n              onSubmit={handleSubmit}\n              action=\"/\"\n              method=\"post\"\n              id=\"update\"\n            >\n              <div className=\"field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    ref={emailRef}\n                    defaultValue={currentUser.email}\n                  />\n              </div>\n\n              <div className=\"field\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"Leave blank to keep current password\"\n                    ref={passwordRef}\n                  />\n              </div>\n\n              <div className=\"field\">\n                  <label htmlFor=\"password2\">Confirm Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password2\"\n                    placeholder=\"Leave blank to keep current password\"\n                    ref={confirmPasswordRef}\n                  />\n              </div>\n\n              <div className=\"button\">\n                  <button disabled={loading} type=\"submit\">Update</button>\n              </div>\n            <Link to=\"/certify\">Cancel</Link>\n            </form>\n        </div>\n      </div>\n    )\n};","import * as React from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport Alert from \"../ui-utilites/Alert\";\nimport {useAuth} from '../contexts/AuthContext';\n\nexport default function Certify() {\n    const [error, setError] = React.useState()\n    const history = useHistory()\n\n    const {currentUser, signout} = useAuth()\n\n    async function handleLogout() {\n       setError('')\n\n       try {\n           await signout()\n            history.push('/sign-in')\n       }catch {\n           setError('Failed to logout')\n       }\n    }\n\n    return (\n        <div>\n            <h1>You're about to certify</h1>\n            \n            <p>\n                <strong>Email:</strong> {currentUser.email}\n            </p>\n\n            {error && <Alert variant=\"danger\">Failed to logout</Alert>}\n\n            <Link to=\"/update-profile\">Update profile</Link>\n\n            <p>\n                <a href=\"#\" onClick={handleLogout}>Log Out</a>\n            </p>\n        </div>\n    )\n}","export default function NotFound() {\n    return <h1>Not found</h1>\n}","\nimport * as React from 'react';\nimport {\n    Route,\n    Redirect\n} from 'react-router-dom'\n\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function PrivateRoute({children, ...rest}) {\n\n    const {currentUser} = useAuth()\n\n    return (\n      <Route\n        {...rest}\n        render={({location}) => \n          currentUser ?\n            (children)\n            :\n            (\n              <Redirect \n                to={{\n                  pathname: \"/sign-in\",\n                  state:{from:location}\n                }}\n              />\n            )\n        }\n      />\n    )\n  }","import * as React from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport './App.css';\n\nimport Signup from './components/Signup';\nimport Signin from './components/Signin';\nimport ResetPassword from './components/Resetpassword';\nimport UpdateProfile from './components/Updateprofile';\nimport Dashboard from './components/Dashboard';\nimport Certify from './components/Certify';\nimport NotFound from './components/Notfound';\nimport PrivateRoute from './components/Privateroute';\nimport AuthProvider from './contexts/AuthContext';\n\nexport default function AppRouter () {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/certify\">\n              <Certify />\n          </PrivateRoute>\n          <PrivateRoute path=\"/update-profile\">\n            <UpdateProfile />\n          </PrivateRoute>\n          <Route exact path=\"/forgot-password\">\n            <ResetPassword />\n          </Route>\n          <Route exact path=\"/sign-in\">\n            <Signin />\n          </Route>\n          <Route exact path=\"/sign-up\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/\">\n            <Signin />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppRouter from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}